diff --git a/drivers/block/pmem.c b/drivers/block/pmem.c
index 5eced12..e4c1c8c 100644
--- a/drivers/block/pmem.c
+++ b/drivers/block/pmem.c
@@ -192,9 +192,10 @@ static void pmem_unmapmem(struct pmem_device *pmem)
  */
 int pmem_mapmem(struct pmem_device *pmem)
 {
-	struct resource *res_mem;
+	//struct resource *res_mem;
 	int err;
 
+	/*
 	res_mem = request_mem_region_exclusive(pmem->phys_addr, pmem->size,
 					       "pmem");
 	if (!res_mem) {
@@ -202,6 +203,7 @@ int pmem_mapmem(struct pmem_device *pmem)
 			   pmem->phys_addr, pmem->size);
 		return -EINVAL;
 	}
+	*/
 
 	pmem->virt_addr = ioremap_cache(pmem->phys_addr, pmem->size);
 	if (unlikely(!pmem->virt_addr)) {
@@ -211,7 +213,7 @@ int pmem_mapmem(struct pmem_device *pmem)
 	return 0;
 
 out_release:
-	release_mem_region(pmem->phys_addr, pmem->size);
+	//release_mem_region(pmem->phys_addr, pmem->size);
 	return err;
 }
 
@@ -221,7 +223,7 @@ void pmem_unmapmem(struct pmem_device *pmem)
 		return;
 
 	iounmap(pmem->virt_addr);
-	release_mem_region(pmem->phys_addr, pmem->size);
+	//release_mem_region(pmem->phys_addr, pmem->size);
 	pmem->virt_addr = NULL;
 }
 #endif /* ! CONFIG_BLK_DEV_PMEM_USE_PAGES */
@@ -316,6 +318,8 @@ static int pmem_parse_map_one(char *map, phys_addr_t *start, size_t *size)
 	char *p = map;
 
 	*size = (size_t)memparse(p, &p);
+printk(KERN_ALERT "DEBUG %s %d: p='%s'\n", __FUNCTION__, __LINE__, p);
+printk(KERN_ALERT "DEBUG %s %d: size='%zu'\n", __FUNCTION__, __LINE__, *size);
 	if ((p == map) || ((*p != '$') && (*p != '@')))
 		return -EINVAL;
 
@@ -323,6 +327,7 @@ static int pmem_parse_map_one(char *map, phys_addr_t *start, size_t *size)
 		return -EINVAL;
 
 	*start = (phys_addr_t)memparse(p, &p);
+printk(KERN_ALERT "DEBUG %s %d: start='%#016llx'\n", __FUNCTION__, __LINE__, (unsigned long long)*start);
 
 	return *p == '\0' ? 0 : -EINVAL;
 }
@@ -338,6 +343,7 @@ static int __init pmem_init(void)
 		return -EINVAL;
 	}
 
+printk(KERN_ALERT "DEBUG %s %d: map='%s'\n", __FUNCTION__, __LINE__, map);
 	i = 0;
 	while ((p = strsep(&pmem_map, ",")) != NULL) {
 		phys_addr_t phys_addr;
@@ -345,6 +351,7 @@ static int __init pmem_init(void)
 
 		if (!*p)
 			continue;
+printk(KERN_ALERT "DEBUG %s %d: p='%s'\n", __FUNCTION__, __LINE__, p);
 		result = pmem_parse_map_one(p, &phys_addr, &disk_size);
 		if (result)
 			goto out_free;
