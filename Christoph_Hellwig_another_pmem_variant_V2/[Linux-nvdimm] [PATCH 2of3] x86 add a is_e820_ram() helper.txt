Delivered-To: rcpao.enmotus@gmail.com
Received: by 10.112.50.39 with SMTP id z7csp482795lbn;
        Thu, 26 Mar 2015 01:33:28 -0700 (PDT)
X-Received: by 10.66.160.197 with SMTP id xm5mr24507582pab.51.1427358807383;
        Thu, 26 Mar 2015 01:33:27 -0700 (PDT)
Return-Path: <linux-nvdimm-bounces@lists.01.org>
Received: from ml01.01.org (ml01.01.org. [198.145.21.10])
        by mx.google.com with ESMTPS id di4si7365238pad.57.2015.03.26.01.33.25
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 26 Mar 2015 01:33:27 -0700 (PDT)
Received-SPF: none (google.com: linux-nvdimm-bounces@lists.01.org does not designate permitted sender hosts) client-ip=198.145.21.10;
Authentication-Results: mx.google.com;
       spf=none (google.com: linux-nvdimm-bounces@lists.01.org does not designate permitted sender hosts) smtp.mail=linux-nvdimm-bounces@lists.01.org
Received: from ml01.vlan14.01.org (localhost [IPv6:::1])
	by ml01.01.org (Postfix) with ESMTP id 8989981259;
	Thu, 26 Mar 2015 01:33:25 -0700 (PDT)
X-Original-To: linux-nvdimm@ml01.01.org
Delivered-To: linux-nvdimm@ml01.01.org
Received: from bombadil.infradead.org (bombadil.infradead.org
 [IPv6:2001:1868:205::9])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ml01.01.org (Postfix) with ESMTPS id 3E56F80F31
 for <linux-nvdimm@ml01.01.org>; Thu, 26 Mar 2015 01:33:24 -0700 (PDT)
Received: from [83.175.99.196] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.80.1 #2 (Red Hat Linux))
 id 1Yb3E8-0006un-S9; Thu, 26 Mar 2015 08:33:21 +0000
From: Christoph Hellwig <hch@lst.de>
To: linux-nvdimm@ml01.01.org, linux-fsdevel@vger.kernel.org,
 linux-kernel@vger.kernel.org, x86@kernel.org
Date: Thu, 26 Mar 2015 09:32:43 +0100
Message-Id: <1427358764-6126-3-git-send-email-hch@lst.de>
X-Mailer: git-send-email 1.9.1
In-Reply-To: <1427358764-6126-1-git-send-email-hch@lst.de>
References: <1427358764-6126-1-git-send-email-hch@lst.de>
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org See http://www.infradead.org/rpr.html
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org See http://www.infradead.org/rpr.html
Cc: axboe@kernel.dk
Subject: [Linux-nvdimm] [PATCH 2/3] x86: add a is_e820_ram() helper
X-BeenThere: linux-nvdimm@lists.01.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Linux-nvdimm developer list." <linux-nvdimm.lists.01.org>
List-Unsubscribe: <https://lists.01.org/mailman/options/linux-nvdimm>,
 <mailto:linux-nvdimm-request@lists.01.org?subject=unsubscribe>
List-Archive: <http://lists.01.org/pipermail/linux-nvdimm/>
List-Post: <mailto:linux-nvdimm@lists.01.org>
List-Help: <mailto:linux-nvdimm-request@lists.01.org?subject=help>
List-Subscribe: <https://lists.01.org/mailman/listinfo/linux-nvdimm>,
 <mailto:linux-nvdimm-request@lists.01.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: linux-nvdimm-bounces@lists.01.org
Sender: "Linux-nvdimm" <linux-nvdimm-bounces@lists.01.org>

This will allow to deal with persistent memory which needs to be
treated like ram in many, but not all cases.

Based on an earlier patch from Dave Jiang <dave.jiang@intel.com>.

Signed-off-by: Christoph Hellwig <hch@lst.de>
Tested-by: Ross Zwisler <ross.zwisler@linux.intel.com>
---
 arch/x86/kernel/e820.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/arch/x86/kernel/e820.c b/arch/x86/kernel/e820.c
index 46201de..de088e3 100644
--- a/arch/x86/kernel/e820.c
+++ b/arch/x86/kernel/e820.c
@@ -48,6 +48,11 @@ unsigned long pci_mem_start = 0xaeedbabe;
 EXPORT_SYMBOL(pci_mem_start);
 #endif
 
+static inline bool is_e820_ram(__u32 type)
+{
+	return type == E820_RAM;
+}
+
 /*
  * This function checks if any part of the range <start,end> is mapped
  * with type.
@@ -688,7 +693,7 @@ void __init e820_mark_nosave_regions(unsigned long limit_pfn)
 			register_nosave_region(pfn, PFN_UP(ei->addr));
 
 		pfn = PFN_DOWN(ei->addr + ei->size);
-		if (ei->type != E820_RAM && ei->type != E820_RESERVED_KERN)
+		if (!is_e820_ram(ei->type) && ei->type != E820_RESERVED_KERN)
 			register_nosave_region(PFN_UP(ei->addr), pfn);
 
 		if (pfn >= limit_pfn)
@@ -748,7 +753,7 @@ u64 __init early_reserve_e820(u64 size, u64 align)
 /*
  * Find the highest page frame number we have available
  */
-static unsigned long __init e820_end_pfn(unsigned long limit_pfn, unsigned type)
+static unsigned long __init e820_end_pfn(unsigned long limit_pfn)
 {
 	int i;
 	unsigned long last_pfn = 0;
@@ -759,7 +764,7 @@ static unsigned long __init e820_end_pfn(unsigned long limit_pfn, unsigned type)
 		unsigned long start_pfn;
 		unsigned long end_pfn;
 
-		if (ei->type != type)
+		if (!is_e820_ram(ei->type))
 			continue;
 
 		start_pfn = ei->addr >> PAGE_SHIFT;
@@ -784,12 +789,12 @@ static unsigned long __init e820_end_pfn(unsigned long limit_pfn, unsigned type)
 }
 unsigned long __init e820_end_of_ram_pfn(void)
 {
-	return e820_end_pfn(MAX_ARCH_PFN, E820_RAM);
+	return e820_end_pfn(MAX_ARCH_PFN);
 }
 
 unsigned long __init e820_end_of_low_ram_pfn(void)
 {
-	return e820_end_pfn(1UL<<(32 - PAGE_SHIFT), E820_RAM);
+	return e820_end_pfn(1UL<<(32 - PAGE_SHIFT));
 }
 
 static void early_panic(char *msg)
-- 
1.9.1

_______________________________________________
Linux-nvdimm mailing list
Linux-nvdimm@lists.01.org
https://lists.01.org/mailman/listinfo/linux-nvdimm
